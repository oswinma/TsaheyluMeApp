package me.tsaheylu.controller;

import lombok.RequiredArgsConstructor;
import me.tsaheylu.DtoMapper.FavURLDtoMapper;
import me.tsaheylu.common.FavURLStatus;
import me.tsaheylu.common.response.ResponseResult;
import me.tsaheylu.model.FavURL;
import me.tsaheylu.model.User;
import me.tsaheylu.service.FavURLService;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.List;
// import me.tsaheylu.repository.FavURLRepository;

@RestController // This means that this class is a Controller
@RequestMapping(path = "/api/favurl") // This means URL's start with /demo (after Application path)
@ResponseResult
@RequiredArgsConstructor
public class FavURLController {

    private final FavURLService favurlService;

    private final FavURLDtoMapper favURLDtoMapper;

  /*  /api/favurl/archive
  /api/favurl/channel
  /api/favurl/fav
  /api/favurl/fav/update
  /api/favurl/fstatus
  /api/favurl/my
  /api/favurl/new
  /api/favurl/newcoming
  /api/favurl/pending
  /api/favurl/search
  /api/favurl/send
  /api/favurl/status
  /api/favurl/tryrecieve
  /api/favurl/trysend*/

    //  @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    //  private FavURLRepository favurlRepository;

    @GetMapping(path = "/archive")
//  @CrossOrigin(origins = "*", maxAge = 3600)
    public @ResponseBody
    HashMap<String, Object> getArchive(@RequestParam String startCursor) {
        // This returns a JSON or XML with the users
        Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        User user = (User) principal;

        return favurlService.getFavurlsByStatus(user.getId(), startCursor, FavURLStatus.ARCHIVE);
    }

    @GetMapping(path = "/new")
//  @CrossOrigin(origins = "http://localhost:4200", maxAge = 3600)
    public @ResponseBody
    HashMap<String, Object> getNew(@RequestParam String startCursor) {
        // This returns a JSON or XML with the users
        Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        User user = (User) principal;

        return favurlService.getFavurlsByStatus(user.getId(), startCursor, FavURLStatus.NEW);
    }

    @GetMapping(path = "/fav")
//  @CrossOrigin(origins = "*", maxAge = 3600)
    public @ResponseBody
    HashMap<String, Object> getFav(@RequestParam String startCursor) {
        // This returns a JSON or XML with the users
        Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        User user = (User) principal;

        return favurlService.getFav(user.getId(), startCursor);
    }

    @PostMapping(path = "/status")
    public @ResponseBody
    boolean updateStatus(@RequestBody List<FavURL> favurls) {
        // This returns a JSON or XML with the users

        return favurlService.batchUpdateFavurlStatus(favurls);
    }

//    @PostMapping
//    @ResponseStatus(code = HttpStatus.CREATED)
//    private FavURLDTO create(@RequestBody FavURLDTO favURLDTO) {
//        FavURL favURL = favURLDtoMapper.DtoTo(favURLDTO);
//        return favURLDtoMapper.toDto(favurlService.save(favURL));
//    }
//
//    @PutMapping
//    private FavURLDTO update(@RequestBody FavURLDTO favURLDTO) {
//        FavURL favURL = favURLDtoMapper.DtoTo(favURLDTO);
//        return favURLDtoMapper.toDto(favurlService.update(favURL));
//    }
//
//    @GetMapping(value = "/{id}")
//    private FavURLDTO get(@PathVariable Long id) {
//        return favURLDtoMapper.toDto(favurlService.get(id));
//    }

    @DeleteMapping(value = "/{id}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    private void delete(@PathVariable Long id) {
        favurlService.delete(id);
    }

    //
    //  @GetMapping(path = "/channel")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/fav")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/fav/update")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/fstatus")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/my")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/new")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/newcoming")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/pending")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/search")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/send")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/status")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/tryrecieve")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
    //
    //  @GetMapping(path = "/trysend")
    //  public @ResponseBody FavURL getArchive() {
    //    // This returns a JSON or XML with the users
    //
    //    return favurlService.getArchive(Long.valueOf(1));
    //  }
}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.tsaheylu.dao.mapper.UserDaoMapper">

    <resultMap id="ContactResultMap" type="me.tsaheylu.dto.ContactDTO">
        <result property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="nickname" column="nickname"/>
        <result property="avatarURL" column="avatarURL"/>
        <result property="friendid" column="friendid"/>
        <result property="fromid" column="fromid"/>
        <result property="status" column="status"/>
        <result property="popup" column="popup"/>
    </resultMap>

    <select id="getContactListByUserIdList" resultType="me.tsaheylu.dto.ContactDTO">
        SELECT
        a.id,
        a.nickname,
        a.avatarURL,
        a.email,
        b.popup,
        b.id as friendid,
        b.fromid,
        b.status
        FROM
        user AS a
        LEFT JOIN friend AS b ON a.id = b.toid
        AND b.fromid = #{currentuserid}
        where a.id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>

    <select id="getUserByID" resultType="me.tsaheylu.model.User">
        select * from user
        where id = #{id} and status = #{status}
    </select>


    <select id="checkUser" resultType="java.lang.Integer">
        select count(*) from user
        where
        email = #{email} and
        password = #{password}
    </select>


    <select id="getUserByEmail" resultType="me.tsaheylu.model.User" parameterType="java.lang.String">
        select * from user
        where email = #{email}
    </select>


    <select id="search" resultMap="ContactResultMap">
        select
        a.id as id,
        email,
        nickname,
        avatarURL,
        b.id as friendid,
        fromid,
        b.status as status,
        popup
        from tsahaylu.user as a
        left join friend as b
        on a.id = b.toid and b.fromid = #{fromid}
        where (
        a.email like CONCAT('%', #{word},'%') or
        a.nickname like CONCAT('%', #{word},'%'))
        and a.status =1
        and a.id!=#{fromid}
        limit #{startCursor},10
    </select>


    <select id="Get" resultType="me.tsaheylu.model.User">
        select id,
        email,
        nickname,
        country,
        language,
        avatarURL,
        status,
        signuptime,
        code,
        favurlSubscription,
        emailSubscription
        from user
        where id = #{id}
    </select>


    <select id="GetUserDTO" resultType="me.tsaheylu.dto.UserDTO">
        select id,
        nickname,
        country,
        language,
        avatarURL,
        status,
        signuptime
        from user
        where id = #{id}
    </select>


    <insert id="Insert" parameterType="me.tsaheylu.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        (email,password,nickname,country,language,avatarURL,code,status,signuptime,favurlSubscription,emailSubscription)
        values
        (#{email},#{password},#{nickname},#{country},#{language},#{avatarURL},#{code},#{status},#{signuptime},#{favurlSubscription},#{emailSubscription})
    </insert>


    <delete id="Delete" parameterType="java.lang.Long">
        delete from user where id=#{id}
    </delete>


    <update id="Update" parameterType="me.tsaheylu.model.User">
        update user set
        email=#{email},
        password=#{password},
        nickname=#{nickname},
        country=#{country},
        language=#{language},
        avatarURL=#{avatarURL},
        code=#{code},
        status=#{status},
        signuptime=#{signuptime},
        favurlSubscription = #{favurlSubscription},
        emailSubscription = #{emailSubscription}
        where id=#{id}
    </update>

    <select id="getAllUsers" resultType="me.tsaheylu.model.User">
        select *
        from user
        where
        id != #{id}
    </select>

</mapper>

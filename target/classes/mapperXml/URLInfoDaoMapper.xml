<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.tsaheylu.dao.mapper.URLInfoDaoMapper">


    <update id="Update" parameterType="me.tsaheylu.model.URLInfo">
		update urlinfo set
		url = #{url},
		title = #{title},
		icon = #{icon},
		host = #{host},
		status = #{status},
		share = #{share},
		favs = #{favs}
		where id =#{id}
    </update>

    <insert id="Insert" parameterType="me.tsaheylu.model.URLInfo" useGeneratedKeys="true" keyProperty="id">
		insert into urlinfo 
		(url,title,icon,host,status,share,favs)
  		values 
  		(#{url},#{title},#{icon},#{host},#{status},#{share},#{favs})
    </insert>

    <insert id="batchInsert" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.List">
        insert ignore into urlinfo
        (url,title,icon,host,status,share,favs)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.url},#{item.title},#{item.icon},#{item.host},#{item.status},#{item.share},#{item.favs})
        </foreach>
    </insert>

    <select id="batchgetURLInfoByID" resultType="me.tsaheylu.model.URLInfo">
        select * from urlinfo
        where id in

        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{list}
        </foreach>
    </select>


    <select id="getURLInfoByHost" resultType="me.tsaheylu.model.URLInfo">
      select * from urlinfo 
      where host = #{host}
    </select>


    <select id="getURLInfoByUrl" resultType="me.tsaheylu.model.URLInfo">
      select * from urlinfo 
      where url = #{url}
    </select>


    <select id="Get" resultType="me.tsaheylu.model.URLInfo">
      select * from urlinfo 
      where id = #{id}
    </select>

    <delete id="Delete" parameterType="java.lang.Long">
		delete from urlinfo 
		where id=#{id}
    </delete>


    <select id="getRecomURLInfoIdForUser" resultType="java.lang.Long">
        SELECT
            id
        FROM
            urlinfo
        WHERE
            STATUS = 1
        AND id NOT IN
        ( SELECT
        DISTINCT urlid
        FROM favurl
        WHERE fromid = #{fromid}
        AND toid = #{toid} )
        order by id DESC
        LIMIT 1
    </select>

    <select id="getRecomOldURLInfoIdForUser" resultType="java.lang.Long">
        SELECT
            *
        FROM
            `urlinfo` AS a
            JOIN (
            SELECT
                ROUND(
                    RAND( ) * ( ( SELECT MAX( id ) FROM `urlinfo` ) - ( SELECT MIN( id ) FROM `urlinfo` ) ) + ( SELECT MIN( id ) FROM `urlinfo` )
                ) AS id
            ) AS b
        WHERE
            a.id >= b.id
            AND a.STATUS = 1
        ORDER BY
            a.id
            LIMIT 1;
    </select>

    <select id="getURLInfoNumByURL" resultType="java.lang.Integer">
      select
      count(*)
      from urlinfo
      where url = #{url}
    </select>

</mapper>
